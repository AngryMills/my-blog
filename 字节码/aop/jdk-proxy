web、service、http的角度看执行快慢

cglib的底层 MethodProxy.init();
会判断这个 volatile FastClassInfo 是否初始化过,如果初始化过,就直接用。

单线程情况下,cglib的耗时几乎可以忽略不计。
由于web(Controller 是不实现接口的,所以代理是cglib的方式)。



关于拦截方法统计方法执行时间的几种方式,比较常见的aop和其他的框架,skywalking、cat、pinpoint等。
aop是基于代理的方式。
两种方式：
jdk proxy(必须实现接口): 底层是基于反射。
cglib(不需要实现接口): 底层是基于 asm 字节码框架。


为了测试aop和agent的区别,接口和实现尽量简单,主要的时间就是内部执行的时间。

aop方式启动时间可以忽略不计,agent方式启动比之前多了5秒左右。

web接口测试结果:
由于不论是cglib还是jdk代理还是asm，第一次请求会创建字节码文件，后续操作字节码的时间可以忽略。
所以以第一次的请求时间为准: aop:461 ,agent : 849.
service:
aop:461 ,agent : 379.
sql：
aop:9 ,agent : 10.

模拟接口为资讯后台服务的(hot-topic-api)的TopicContentController.getPageList(事件关联内容-列表)
无增强的情况下调用500次接口的结果记录,除去前面几次较慢和中间有几个尖刺之外,平均响应时间为 76ms.
[199, 191, 1073, 656, 210, 633, 544, 66, 80, 62, 389, 91, 224, 174, 462, 236, 143, 214, 567, 166, 153, 68, 191, 61, 105, 131, 106, 205, 142, 338, 249, 105, 113, 123, 77, 131, 63, 70, 96, 75, 58, 117, 63, 68, 54, 62, 35, 251, 112, 97, 49, 48, 55, 38, 64, 77, 63, 61, 43, 42, 47, 59, 36, 103, 92, 90, 57, 104, 54, 49, 671, 50, 125, 67, 48, 38, 22, 58, 55, 98, 42, 777, 80, 91, 55, 71, 48, 64, 688, 75, 80, 126, 64, 103, 104, 80, 35, 30, 29, 32, 418, 31, 41, 39, 25, 33, 29, 33, 38, 28, 65, 39, 66, 33, 46, 45, 478, 54, 67, 49, 69, 49, 34, 46, 52, 54, 36, 67, 669, 32, 34, 43, 39, 32, 30, 29, 56, 111, 54, 37, 28, 41, 60, 127, 66, 48, 39, 43, 35, 56, 33, 44, 89, 127, 42, 62, 123, 67, 114, 51, 82, 90, 30, 48, 56, 51, 44, 40, 88, 33, 50, 31, 32, 72, 43, 41, 67, 72, 67, 58, 46, 55, 62, 58, 55, 29, 57, 63, 54, 42, 60, 77, 110, 45, 49, 47, 52, 54, 44, 50, 57, 88, 68, 36, 47, 49, 47, 46, 99, 44, 32, 41, 49, 51, 97, 45, 38, 39, 68, 52, 48, 49, 31, 38, 46, 63, 41, 43, 29, 50, 49, 89, 57, 40, 39, 46, 36, 26, 41, 35, 80, 55, 142, 98, 51, 41, 41, 38, 64, 51, 57, 68, 108, 53, 82, 151, 62, 32, 33, 24, 38, 31, 41, 39, 44, 36, 50, 40, 51, 63, 44, 48, 32, 33, 32, 37, 68, 36, 50, 67, 111, 50, 47, 48, 69, 78, 55, 59, 32, 115, 76, 48, 87, 151, 48, 125, 63, 60, 38, 56, 40, 40, 31, 31, 44, 33, 53, 34, 28, 867, 65, 55, 68, 48, 42, 36, 33, 80, 47, 1028, 30, 23, 36, 22, 58, 35, 86, 46, 52, 81, 33, 34, 37, 55, 34, 38, 40, 30, 43, 27, 24, 32, 35, 31, 47, 42, 32, 25, 37, 36, 29, 26, 30, 34, 60, 82, 40, 61, 42, 49, 31, 49, 29, 30, 47, 51, 271, 66, 64, 92, 57, 58, 88, 58, 80, 25, 46, 28, 32, 46, 85, 46, 58, 44, 61, 23, 24, 33, 35, 37, 38, 57, 35, 21, 40, 37, 29, 32, 24, 35, 47, 50, 29, 22, 51, 41, 64, 131, 62, 213, 71, 40, 25, 32, 46, 41, 26, 38, 33, 43, 43, 37, 64, 38, 72, 43, 39, 43, 37, 31, 28, 90, 51, 39, 40, 57, 41, 27, 37, 42, 81, 35, 27, 29, 39, 43, 30, 31, 28, 29, 25, 25, 44, 48, 42, 21, 102, 29, 30, 26, 27, 39, 51, 29, 30, 30, 25, 24, 32, 32, 32, 57, 34, 29, 65, 56, 33, 59, 26, 85, 51, 37, 60, 29, 46, 50, 40, 33, 86, 48, 65, 55, 47, 31, 45, 41, 53, 59, 38, 48]
avg = OptionalDouble[76.57]

aop增强的情况下调用500次接口的结果记录,除去前面几次较慢和中间有几个尖刺之外,平均响应时间为 139ms.
[980, 52, 42, 41, 51, 45, 39, 153, 133, 183, 67, 70, 78, 97, 120, 124, 204, 80, 238, 244, 73, 146, 317, 126, 59, 90, 57, 223, 133, 134, 119, 119, 407, 241, 222, 612, 247, 121, 141, 159, 87, 96, 140, 64, 74, 163, 82, 27, 24, 31, 25, 31, 40, 49, 78, 236, 86, 116, 123, 54, 51, 46, 50, 28, 26, 39, 87, 61, 62, 44, 168, 54, 64, 84, 126, 90, 78, 42, 44, 32, 71, 208, 67, 56, 169, 52, 66, 93, 58, 67, 82, 68, 63, 35, 43, 38, 83, 63, 56, 74, 47, 66, 148, 51, 109, 97, 100, 69, 94, 70, 66, 141, 115, 105, 80, 34, 56, 128, 250, 82, 97, 106, 73, 101, 119, 282, 199, 112, 78, 77, 168, 112, 311, 88, 189, 32, 105, 101, 87, 62, 95, 67, 89, 158, 93, 54, 51, 26, 30, 28, 77, 60, 67, 80, 32, 76, 109, 231, 142, 179, 106, 100, 98, 75, 98, 110, 85, 162, 71, 200, 84, 116, 101, 177, 206, 257, 176, 34, 178, 231, 121, 123, 174, 147, 153, 82, 92, 34, 112, 151, 136, 98, 116, 110, 128, 132, 105, 38, 156, 104, 120, 136, 69, 69, 53, 174, 363, 164, 109, 92, 75, 291, 193, 109, 130, 58, 106, 105, 133, 122, 146, 197, 132, 92, 95, 110, 108, 96, 187, 92, 118, 85, 94, 171, 100, 65, 106, 112, 62, 63, 66, 62, 79, 64, 93, 103, 70, 95, 88, 78, 68, 137, 70, 81, 98, 116, 157, 183, 181, 165, 150, 73, 75, 73, 92, 90, 187, 170, 126, 109, 94, 200, 169, 55, 41, 51, 39, 66, 66, 81, 209, 97, 156, 464, 136, 66, 131, 214, 56, 340, 128, 68, 76, 96, 307, 115, 97, 97, 124, 76, 150, 84, 80, 137, 186, 131, 102, 97, 168, 163, 68, 99, 102, 131, 165, 105, 123, 43, 81, 31, 127, 98, 81, 55, 121, 72, 74, 79, 103, 53, 119, 86, 107, 84, 154, 91, 217, 687, 154, 106, 118, 87, 104, 150, 75, 117, 103, 119, 152, 118, 178, 76, 89, 93, 87, 161, 178, 270, 136, 174, 94, 362, 295, 858, 216, 195, 195, 169, 95, 174, 392, 248, 462, 99, 787, 139, 179, 454, 142, 60, 73, 39, 33, 52, 146, 830, 132, 185, 162, 494, 179, 272, 246, 652, 187, 105, 97, 85, 103, 672, 432, 232, 810, 76, 209, 204, 741, 72, 94, 26, 51, 36, 47, 62, 42, 90, 50, 785, 507, 719, 123, 104, 180, 374, 186, 79, 299, 835, 151, 134, 184, 632, 150, 210, 200, 193, 123, 84, 89, 118, 175, 99, 203, 162, 159, 151, 203, 164, 146, 120, 140, 250, 248, 92, 134, 177, 435, 113, 229, 148, 326, 55, 403, 275, 149, 271, 125, 172, 141, 75, 41, 52, 50, 86, 45, 74, 43, 26, 59, 28, 34, 46, 44, 33, 32, 90, 31, 73, 42, 54, 101, 122, 178, 78, 46, 54, 59, 67, 146, 276]
avg = OptionalDouble[139.172]


agent增强的情况下调用500次接口的结果记录,除去前面几次较慢和中间有几个尖刺之外,平均响应时间为 87ms.
[1379, 318, 123, 161, 76, 62, 67, 100, 132, 79, 64, 61, 84, 230, 157, 124, 104, 136, 71, 98, 69, 80, 66, 64, 68, 80, 65, 47, 50, 62, 63, 87, 71, 71, 66, 85, 103, 69, 99, 66, 150, 47, 95, 64, 44, 123, 74, 82, 46, 111, 100, 42, 182, 140, 53, 218, 129, 151, 82, 37, 79, 64, 53, 99, 63, 53, 56, 58, 73, 52, 69, 37, 63, 71, 45, 66, 50, 109, 60, 120, 50, 89, 109, 59, 49, 125, 71, 144, 126, 326, 41, 53, 55, 71, 85, 67, 77, 69, 68, 74, 57, 800, 48, 35, 91, 147, 102, 1102, 41, 26, 43, 39, 63, 100, 67, 45, 44, 50, 53, 77, 35, 53, 43, 30, 39, 31, 60, 89, 45, 49, 48, 59, 47, 68, 57, 51, 55, 79, 151, 104, 44, 39, 60, 72, 110, 180, 258, 61, 210, 67, 66, 62, 88, 116, 43, 30, 50, 74, 59, 54, 82, 66, 62, 47, 47, 90, 56, 57, 76, 115, 84, 115, 49, 63, 75, 70, 38, 66, 57, 68, 112, 58, 317, 146, 59, 78, 85, 63, 109, 168, 44, 62, 68, 81, 65, 83, 68, 47, 93, 74, 172, 91, 99, 46, 182, 48, 74, 172, 44, 139, 74, 103, 99, 53, 44, 203, 64, 166, 176, 42, 45, 49, 103, 168, 78, 81, 50, 59, 50, 90, 104, 167, 76, 232, 84, 64, 43, 48, 58, 60, 179, 80, 77, 75, 56, 42, 86, 37, 37, 101, 70, 94, 39, 125, 38, 67, 50, 69, 118, 185, 66, 210, 41, 60, 32, 43, 59, 50, 34, 47, 68, 52, 41, 65, 52, 56, 140, 46, 41, 69, 45, 32, 46, 115, 145, 86, 50, 49, 39, 63, 86, 82, 75, 51, 78, 56, 148, 63, 49, 43, 67, 64, 126, 63, 58, 76, 138, 100, 557, 68, 38, 40, 53, 69, 43, 41, 92, 90, 64, 133, 47, 65, 55, 138, 129, 157, 49, 40, 66, 134, 32, 87, 59, 44, 60, 60, 49, 51, 56, 34, 47, 39, 41, 38, 41, 256, 54, 57, 72, 105, 55, 48, 181, 159, 44, 93, 85, 63, 97, 65, 62, 70, 86, 97, 48, 76, 52, 57, 696, 30, 43, 91, 87, 91, 53, 1259, 369, 74, 53, 62, 143, 156, 68, 83, 56, 146, 154, 52, 67, 103, 81, 71, 57, 31, 34, 43, 55, 43, 42, 47, 26, 72, 53, 46, 35, 46, 62, 61, 27, 75, 96, 80, 52, 46, 44, 83, 201, 63, 163, 44, 70, 39, 70, 67, 91, 95, 65, 49, 43, 82, 88, 60, 86, 78, 106, 50, 54, 56, 55, 83, 78, 83, 40, 64, 46, 101, 92, 66, 90, 78, 532, 25, 48, 49, 40, 72, 57, 263, 69, 43, 28, 53, 39, 42, 65, 31, 29, 48, 54, 52, 49, 75, 36, 31, 36, 38, 41, 47, 31, 42, 30, 33, 25, 24, 50, 36, 39, 28, 45, 47, 30, 50, 33, 80, 34, 28, 80, 30, 40, 33]
avg = OptionalDouble[87.764]


考虑到有可能是数据库连接或者其他问题影响了接口响应,只对web层接口和web+service接口进行增强测试，无业务逻辑，单纯的调用返回。
可以看出整体时间可以忽略不计，第一次调用agent的接口明显慢于aop和无增强的方式。
web:
无增强的情况下调用500次接口的结果记录,平均响应时间为 6 ms.
[433, 19, 11, 10, 8, 9, 8, 8, 6, 5, 6, 5, 5, 6, 6, 7, 5, 5, 6, 4, 7, 6, 4, 4, 5, 4, 4, 5, 4, 5, 5, 5, 5, 5, 5, 9, 6, 8, 7, 8, 6, 7, 6, 6, 5, 4, 6, 4, 4, 4, 4, 4, 5, 5, 4, 5, 3, 4, 4, 4, 4, 4, 5, 5, 5, 4, 3, 3, 3, 5, 4, 5, 5, 4, 4, 5, 5, 3, 5, 5, 20, 11, 7, 6, 5, 5, 5, 3, 3, 3, 4, 4, 4, 3, 4, 5, 4, 5, 5, 4, 4, 4, 5, 6, 4, 8, 4, 9, 4, 6, 6, 3, 7, 4, 4, 5, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 5, 4, 4, 4, 3, 4, 3, 3, 3, 3, 3, 3, 4, 4, 3, 5, 3, 4, 4, 6, 3, 3, 6, 3, 4, 5, 3, 5, 3, 5, 4, 3, 7, 4, 3, 5, 4, 5, 6, 10, 5, 4, 3, 5, 9, 6, 5, 5, 8, 4, 5, 4, 4, 7, 4, 6, 7, 6, 6, 6, 6, 9, 9, 5, 11, 11, 10, 5, 8, 9, 8, 5, 4, 5, 5, 13, 8, 6, 9, 6, 8, 7, 5, 8, 5, 6, 6, 6, 5, 4, 5, 4, 4, 6, 5, 6, 8, 4, 8, 7, 10, 7, 9, 7, 5, 8, 9, 7, 4, 5, 7, 6, 7, 7, 6, 5, 4, 7, 7, 8, 6, 8, 4, 9, 6, 9, 7, 9, 10, 6, 9, 7, 5, 4, 5, 4, 4, 4, 5, 6, 8, 6, 6, 5, 5, 7, 3, 3, 5, 3, 3, 3, 3, 4, 4, 5, 4, 4, 5, 4, 4, 4, 5, 4, 3, 5, 3, 4, 3, 4, 4, 3, 3, 3, 3, 3, 2, 4, 4, 4, 3, 5, 4, 5, 5, 5, 2, 8, 4, 6, 6, 4, 8, 6, 8, 5, 5, 6, 5, 5, 4, 4, 3, 3, 4, 3, 3, 3, 3, 3, 2, 3, 3, 3, 4, 3, 3, 4, 4, 4, 4, 4, 4, 6, 4, 4, 7, 4, 4, 5, 4, 6, 6, 4, 7, 4, 4, 6, 4, 5, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4, 5, 4, 4, 4, 3, 5, 4, 4, 5, 5, 6, 4, 5, 7, 4, 5, 7, 4, 9, 5, 5, 4, 4, 5, 4, 2, 3, 5, 3, 3, 2, 4, 2, 2, 2, 3, 2, 2, 2, 3, 3, 2, 3, 3, 3, 3, 3, 2, 3, 3, 5, 5, 5, 6, 5, 5, 5, 4, 6, 4, 5, 9, 5, 9, 4, 8, 5, 3, 7, 13, 6, 3, 3, 2, 3, 3, 3, 3, 2, 3, 2, 3, 3, 3, 3, 30, 46, 18, 17, 4, 4, 6, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 9, 7]
avg = OptionalDouble[5.936]

aop增强的情况下调用500次接口的结果记录,平均响应时间为 6 ms.
[420, 12, 9, 10, 11, 7, 8, 10, 8, 7, 6, 7, 6, 5, 5, 8, 6, 5, 6, 4, 6, 4, 5, 5, 5, 6, 5, 4, 6, 4, 5, 5, 5, 6, 5, 4, 5, 5, 11, 10, 8, 10, 11, 10, 8, 9, 7, 7, 6, 5, 6, 5, 5, 5, 6, 6, 4, 5, 5, 4, 5, 5, 8, 6, 6, 5, 5, 8, 4, 8, 5, 7, 6, 6, 6, 5, 4, 4, 4, 4, 13, 15, 12, 11, 7, 9, 5, 6, 5, 6, 5, 5, 7, 6, 8, 8, 10, 7, 6, 5, 7, 6, 8, 9, 5, 6, 5, 6, 7, 9, 8, 7, 8, 5, 6, 6, 8, 7, 8, 7, 7, 6, 5, 9, 7, 5, 9, 7, 6, 4, 3, 4, 5, 5, 6, 5, 4, 6, 5, 5, 8, 4, 5, 6, 5, 5, 6, 5, 8, 5, 5, 6, 5, 7, 4, 5, 6, 4, 6, 4, 4, 4, 3, 4, 4, 4, 4, 4, 5, 6, 4, 5, 4, 7, 7, 7, 5, 6, 7, 6, 6, 9, 6, 6, 6, 5, 8, 6, 6, 6, 7, 13, 4, 4, 6, 7, 6, 5, 6, 4, 6, 6, 4, 4, 6, 4, 8, 5, 4, 7, 5, 8, 4, 10, 5, 8, 5, 5, 5, 4, 3, 5, 3, 4, 5, 5, 6, 8, 7, 8, 7, 8, 5, 5, 5, 4, 6, 6, 5, 5, 6, 5, 5, 7, 4, 8, 5, 8, 6, 8, 4, 4, 5, 4, 5, 9, 7, 7, 5, 5, 6, 4, 7, 4, 3, 5, 5, 5, 6, 5, 6, 4, 5, 6, 4, 6, 6, 5, 6, 4, 4, 9, 4, 5, 5, 4, 5, 4, 4, 5, 5, 4, 5, 4, 5, 6, 3, 4, 5, 4, 4, 5, 5, 5, 6, 4, 4, 7, 4, 6, 5, 7, 6, 5, 4, 5, 6, 6, 5, 5, 6, 3, 3, 3, 6, 6, 5, 4, 6, 5, 5, 5, 6, 5, 7, 4, 4, 4, 6, 5, 7, 6, 7, 6, 7, 4, 4, 5, 5, 4, 5, 5, 3, 4, 4, 4, 4, 5, 4, 5, 5, 5, 7, 5, 5, 6, 6, 8, 5, 9, 4, 4, 5, 5, 6, 5, 4, 5, 6, 5, 9, 5, 7, 7, 9, 4, 4, 5, 5, 4, 4, 4, 5, 6, 5, 4, 4, 5, 4, 5, 5, 4, 5, 4, 4, 4, 5, 4, 3, 4, 3, 4, 4, 5, 4, 4, 5, 4, 5, 6, 4, 4, 6, 4, 5, 5, 3, 3, 3, 6, 3, 4, 4, 4, 5, 4, 4, 4, 6, 6, 4, 4, 7, 3, 6, 3, 4, 7, 5, 4, 3, 5, 4, 5, 5, 5, 7, 5, 5, 5, 6, 6, 6, 27, 6, 24, 44, 8, 3, 4, 6, 5, 5, 4, 6, 7, 5, 5, 4, 4, 4, 6, 5, 4, 5, 6, 6, 5, 7, 6, 4, 5, 4, 3, 3, 4, 3, 3, 4, 3]
avg = OptionalDouble[6.502]

agent增强的情况下调用500次接口的结果记录,平均响应时间为 7ms.
[846, 9, 7, 8, 6, 5, 5, 5, 5, 6, 5, 9, 6, 7, 6, 8, 4, 5, 5, 5, 6, 4, 4, 5, 4, 5, 4, 4, 5, 5, 4, 4, 5, 4, 5, 5, 7, 8, 5, 8, 7, 10, 7, 6, 7, 10, 6, 8, 5, 8, 7, 7, 8, 9, 11, 7, 6, 6, 7, 5, 8, 7, 7, 7, 8, 5, 6, 6, 5, 5, 8, 7, 7, 7, 7, 9, 8, 7, 6, 8, 29, 11, 10, 15, 10, 11, 8, 10, 10, 7, 10, 6, 8, 6, 6, 8, 8, 6, 7, 7, 5, 4, 9, 5, 6, 7, 5, 6, 6, 8, 5, 9, 5, 8, 5, 5, 7, 7, 5, 5, 8, 6, 8, 4, 5, 4, 4, 7, 3, 4, 3, 3, 3, 3, 4, 5, 4, 5, 5, 3, 3, 5, 4, 4, 6, 5, 5, 7, 6, 6, 4, 5, 9, 4, 6, 7, 5, 5, 4, 4, 3, 3, 3, 3, 4, 4, 3, 4, 3, 4, 4, 3, 3, 4, 5, 5, 6, 8, 3, 4, 5, 5, 6, 7, 4, 6, 5, 6, 4, 6, 8, 17, 10, 4, 4, 4, 4, 4, 3, 4, 4, 5, 4, 6, 7, 7, 8, 5, 7, 4, 5, 7, 6, 9, 5, 10, 5, 8, 6, 7, 6, 6, 5, 7, 5, 6, 5, 5, 4, 8, 7, 7, 8, 6, 9, 8, 7, 7, 9, 8, 5, 8, 6, 5, 5, 4, 6, 4, 6, 7, 6, 5, 6, 4, 5, 5, 5, 4, 5, 6, 4, 5, 7, 6, 9, 5, 4, 6, 7, 6, 5, 8, 4, 4, 5, 3, 3, 3, 5, 3, 3, 3, 4, 4, 3, 4, 4, 3, 4, 4, 3, 3, 4, 3, 3, 3, 4, 4, 6, 4, 26, 4, 6, 6, 5, 8, 5, 6, 4, 4, 6, 6, 7, 4, 3, 6, 3, 4, 5, 4, 5, 5, 3, 3, 3, 4, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 7, 5, 9, 5, 5, 5, 6, 10, 5, 7, 8, 9, 6, 4, 4, 5, 5, 4, 5, 6, 4, 5, 4, 4, 4, 4, 3, 4, 4, 5, 5, 5, 4, 4, 6, 6, 4, 6, 4, 7, 4, 3, 4, 6, 5, 7, 5, 9, 5, 3, 7, 4, 4, 7, 6, 4, 4, 4, 4, 4, 4, 4, 5, 6, 7, 4, 4, 5, 6, 4, 7, 5, 4, 6, 5, 7, 4, 6, 4, 5, 6, 4, 3, 3, 6, 3, 3, 4, 3, 3, 4, 4, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 3, 5, 3, 4, 6, 4, 4, 7, 5, 8, 4, 4, 5, 3, 4, 5, 6, 4, 6, 3, 3, 3, 5, 3, 3, 22, 12, 12, 39, 11, 5, 10, 10, 6, 6, 5, 4, 9, 4, 7, 8, 7, 5, 5, 5, 3, 3, 5, 3, 3, 3, 4, 3, 3, 4, 3, 2, 3, 3, 4, 4, 4]
avg = OptionalDouble[7.272]

web+service:

无增强的情况下调用500次接口的结果记录,平均响应时间为 6 ms.
[561, 8, 5, 5, 6, 5, 5, 6, 4, 7, 4, 4, 5, 5, 5, 7, 4, 4, 5, 4, 3, 4, 4, 4, 5, 4, 4, 3, 5, 5, 3, 4, 4, 3, 3, 5, 3, 5, 4, 4, 4, 6, 7, 9, 7, 12, 9, 5, 9, 6, 10, 8, 8, 8, 6, 6, 5, 4, 6, 5, 5, 4, 5, 7, 5, 6, 7, 8, 8, 9, 7, 10, 8, 7, 10, 8, 7, 5, 7, 6, 20, 17, 6, 5, 4, 6, 6, 7, 7, 6, 7, 11, 18, 15, 7, 14, 10, 7, 8, 6, 8, 6, 7, 6, 6, 6, 6, 8, 8, 12, 11, 9, 10, 11, 7, 10, 13, 11, 5, 7, 4, 4, 7, 4, 5, 4, 6, 10, 5, 7, 6, 7, 6, 7, 6, 6, 8, 7, 5, 8, 5, 9, 4, 4, 5, 5, 5, 6, 4, 4, 4, 5, 4, 3, 6, 4, 4, 3, 3, 4, 6, 4, 6, 5, 5, 7, 4, 5, 8, 4, 9, 5, 8, 7, 11, 10, 5, 5, 5, 4, 3, 6, 4, 4, 4, 5, 4, 5, 6, 5, 5, 18, 10, 6, 12, 8, 7, 12, 11, 7, 10, 5, 7, 6, 7, 5, 6, 4, 4, 5, 5, 6, 5, 7, 8, 6, 10, 9, 8, 7, 7, 11, 6, 11, 8, 6, 7, 4, 4, 6, 3, 4, 3, 3, 3, 3, 4, 3, 4, 3, 4, 4, 5, 5, 4, 7, 4, 6, 7, 5, 7, 7, 8, 5, 9, 7, 7, 4, 4, 5, 3, 4, 6, 4, 3, 3, 4, 4, 3, 2, 3, 3, 2, 3, 3, 5, 3, 3, 3, 4, 4, 5, 5, 4, 4, 4, 9, 5, 7, 4, 8, 4, 5, 8, 7, 5, 4, 6, 5, 3, 6, 4, 3, 3, 3, 3, 4, 3, 2, 3, 3, 3, 17, 13, 3, 3, 4, 4, 3, 5, 5, 4, 4, 4, 5, 7, 4, 4, 8, 4, 7, 4, 3, 6, 3, 4, 7, 4, 3, 3, 5, 4, 5, 4, 4, 4, 4, 4, 4, 4, 3, 5, 5, 4, 5, 5, 6, 5, 8, 5, 8, 5, 4, 11, 5, 9, 5, 5, 4, 5, 6, 3, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 4, 3, 3, 4, 5, 3, 7, 7, 5, 6, 8, 8, 9, 7, 7, 7, 7, 6, 4, 8, 3, 3, 5, 3, 2, 3, 3, 3, 3, 2, 3, 4, 4, 3, 4, 3, 3, 3, 4, 4, 4, 3, 4, 7, 5, 7, 5, 4, 8, 4, 5, 5, 5, 3, 5, 3, 3, 4, 3, 3, 3, 5, 4, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 20, 14, 17, 20, 22, 8, 4, 8, 4, 7, 3, 3, 3, 4, 3, 3, 3, 4, 3, 3, 3, 4, 3, 2, 3, 3, 3, 4, 4, 3, 3, 3, 3, 2, 3, 3, 4]
avg = OptionalDouble[6.594]


aop增强的情况下调用500次接口的结果记录,平均响应时间为 7 ms.
[536, 28, 12, 11, 7, 7, 7, 10, 8, 6, 6, 5, 6, 5, 6, 7, 4, 5, 5, 4, 6, 4, 5, 5, 5, 6, 5, 6, 6, 8, 9, 8, 13, 11, 10, 8, 9, 12, 9, 7, 10, 7, 7, 5, 7, 5, 5, 6, 5, 5, 6, 7, 7, 8, 6, 9, 7, 9, 6, 8, 6, 7, 6, 9, 5, 8, 4, 4, 4, 4, 4, 4, 4, 4, 6, 6, 5, 4, 4, 6, 31, 22, 15, 10, 12, 8, 8, 5, 6, 7, 6, 5, 5, 6, 5, 5, 7, 5, 7, 4, 5, 7, 12, 7, 11, 9, 7, 8, 5, 10, 7, 14, 7, 5, 7, 10, 7, 6, 7, 7, 8, 6, 7, 5, 4, 7, 6, 12, 5, 9, 6, 7, 5, 9, 5, 7, 5, 6, 4, 5, 7, 5, 5, 5, 4, 4, 6, 3, 5, 5, 4, 4, 6, 5, 4, 7, 7, 7, 5, 13, 9, 6, 6, 7, 7, 7, 5, 6, 6, 6, 5, 5, 4, 3, 3, 6, 5, 8, 6, 6, 8, 6, 11, 8, 6, 7, 5, 5, 5, 5, 4, 6, 6, 4, 5, 5, 4, 5, 6, 5, 6, 6, 4, 5, 6, 5, 5, 5, 5, 7, 7, 5, 6, 4, 9, 5, 5, 5, 4, 6, 7, 9, 5, 5, 11, 7, 6, 5, 10, 7, 5, 6, 8, 7, 10, 5, 5, 7, 8, 9, 5, 6, 3, 4, 6, 6, 6, 6, 10, 10, 8, 8, 7, 6, 8, 11, 12, 7, 9, 7, 8, 8, 15, 7, 6, 7, 4, 5, 9, 6, 9, 7, 6, 5, 7, 5, 5, 4, 3, 4, 5, 5, 5, 7, 5, 7, 5, 6, 6, 5, 7, 4, 7, 5, 8, 4, 4, 4, 4, 5, 4, 5, 6, 8, 5, 7, 5, 4, 7, 4, 3, 3, 3, 4, 4, 5, 5, 7, 4, 16, 7, 6, 5, 6, 4, 4, 5, 3, 4, 4, 4, 4, 3, 4, 4, 4, 4, 5, 6, 5, 5, 6, 8, 5, 7, 3, 4, 5, 5, 6, 5, 6, 7, 5, 7, 6, 5, 6, 5, 5, 6, 5, 5, 6, 5, 5, 6, 5, 6, 6, 4, 5, 4, 6, 5, 6, 4, 3, 6, 5, 5, 6, 6, 10, 6, 8, 6, 9, 4, 6, 4, 4, 4, 4, 3, 3, 6, 4, 5, 5, 4, 5, 6, 7, 9, 6, 6, 6, 4, 7, 5, 5, 4, 4, 4, 3, 4, 3, 4, 5, 4, 4, 4, 4, 5, 6, 3, 5, 6, 4, 4, 6, 4, 4, 4, 3, 4, 3, 4, 4, 5, 5, 4, 4, 7, 4, 4, 9, 5, 4, 5, 3, 5, 4, 4, 4, 4, 4, 6, 5, 5, 4, 5, 55, 9, 8, 36, 8, 3, 3, 3, 5, 5, 3, 5, 3, 3, 4, 5, 4, 4, 5, 3, 5, 6, 4, 5, 7, 3, 6, 8, 5, 6, 4, 3, 4, 3, 3, 2, 3]
avg = OptionalDouble[7.174]


agent增强的情况下调用500次接口的结果记录,平均响应时间为 7ms.
[896, 9, 8, 4, 7, 5, 6, 6, 5, 6, 5, 5, 6, 5, 6, 10, 6, 6, 5, 4, 4, 5, 5, 4, 5, 6, 5, 7, 6, 4, 5, 4, 5, 5, 6, 5, 6, 7, 7, 6, 10, 11, 7, 9, 10, 5, 8, 7, 9, 5, 6, 6, 8, 4, 5, 5, 4, 4, 4, 6, 4, 6, 7, 9, 5, 8, 6, 8, 6, 7, 5, 8, 4, 4, 4, 4, 4, 10, 7, 4, 29, 11, 7, 10, 8, 9, 6, 8, 6, 6, 6, 4, 8, 6, 8, 7, 6, 9, 7, 7, 4, 6, 7, 7, 4, 5, 6, 4, 6, 6, 8, 7, 7, 9, 6, 10, 8, 5, 6, 7, 5, 10, 5, 6, 4, 3, 6, 8, 4, 3, 4, 5, 3, 3, 3, 5, 4, 3, 5, 4, 5, 6, 5, 4, 8, 4, 6, 4, 6, 7, 5, 7, 5, 8, 4, 5, 6, 3, 3, 5, 3, 3, 4, 3, 5, 4, 4, 5, 5, 4, 4, 4, 3, 4, 4, 6, 5, 7, 8, 5, 8, 6, 8, 6, 9, 7, 10, 6, 6, 9, 7, 7, 6, 4, 6, 4, 3, 4, 6, 7, 5, 4, 4, 5, 7, 6, 6, 7, 6, 8, 7, 10, 7, 12, 9, 5, 11, 6, 10, 9, 9, 8, 6, 7, 5, 5, 5, 5, 5, 6, 5, 6, 4, 5, 5, 5, 5, 7, 6, 8, 5, 10, 6, 9, 7, 11, 9, 9, 8, 6, 9, 8, 7, 6, 7, 6, 7, 7, 5, 4, 5, 5, 5, 4, 6, 6, 6, 5, 5, 41, 6, 8, 5, 7, 4, 5, 7, 4, 4, 5, 4, 3, 4, 4, 4, 5, 5, 6, 5, 3, 4, 5, 4, 4, 4, 3, 5, 5, 5, 5, 5, 4, 5, 8, 6, 8, 6, 5, 4, 4, 7, 5, 4, 8, 4, 4, 6, 4, 4, 14, 7, 5, 4, 6, 5, 4, 4, 3, 5, 3, 5, 5, 6, 5, 4, 8, 5, 5, 5, 7, 6, 7, 6, 7, 7, 5, 5, 3, 3, 5, 3, 3, 4, 4, 5, 5, 6, 3, 5, 6, 5, 6, 4, 7, 6, 5, 7, 10, 5, 7, 7, 6, 10, 7, 6, 7, 4, 4, 6, 3, 5, 4, 5, 9, 6, 6, 4, 4, 3, 6, 5, 4, 5, 3, 6, 7, 5, 4, 6, 5, 9, 6, 10, 6, 7, 5, 8, 6, 5, 5, 6, 4, 5, 6, 5, 5, 7, 5, 3, 6, 4, 4, 4, 6, 6, 6, 7, 5, 8, 4, 8, 5, 7, 5, 7, 7, 9, 5, 6, 3, 3, 4, 5, 3, 4, 4, 5, 5, 7, 4, 4, 5, 2, 4, 4, 4, 5, 7, 7, 6, 6, 9, 6, 34, 26, 13, 21, 20, 9, 3, 5, 4, 5, 4, 3, 4, 4, 4, 5, 4, 6, 4, 6, 6, 4, 5, 6, 4, 7, 5, 7, 5, 4, 9, 4, 5, 5, 3, 6, 3]
avg = OptionalDouble[7.758]


测试cpu和内存使用情况。模拟接口为资讯后台服务的(hot-topic-api)的TopicContentController.getPageList(事件关联内容-列表)。
上报情况为 web+service+sql。
系统：windows.
cpu: i5, 2.4GHz *2
内存:16G
启动项目设置：-Xmx1g -Xms512M 最大堆内存 1G,最小512M。
模拟场景10条线程循环50次，QPS大概在100左右。

无增强的情况下：
cpu:峰值26%。
堆内存：360M(结束调用后1min左右回归稳定)，130M左右。
线程数：峰值185。(结束调用后1min左右回归初始)，初始60。
类装载数：1000+。

aop增强的情况下：
cpu:峰值20%。
堆内存：358M(结束调用后1min左右回归稳定)，100M左右。
线程数：峰值207。(结束调用后1min左右回归初始)，初始60。
类装载数：1000+。

agent增强的情况下：
cpu:峰值22%。
堆内存：350M(结束调用后1min左右回归初始)，后续稳定在130。
线程数：峰值260。(结束调用后1min左右回归初始)，初始70。
类装载数：1000+。

综合结论：
1. 启动时长：由于agent在main函数执行之前进行类增强,所以启动时间比aop方式增加 5s 左右。
2. 请求时长：在单纯web和web+service接口无明显差距,aop略由于agent方式，在更长的链路上(web+service+sql),agent的平均时长优于aop方式。(不排除数据库链接问题等因素)
3. 关于第一次请求,响应慢的问题。aop基于jdk或者cglib,agent基于bytebuddy,都需要进行class文件的渲染，造成的耗时。
4. 耦合问题,agent方式不需要引入jar包,只需要修改启动脚本,而且无需考虑jar包冲突等问题。
5. 关于更新问题,无需修改pom文件,在打包脚本集成agent,每次拉取最新的代码打包即可。
6. 拓展问题,agent支持自定义插件,框架已经搭好,只需要定义对应的拦截和逻辑即可(比如监控redis、mq等中间件)。

org.aopalliance.intercept

java.lang.reflect.Method

@CallerSensitive
@ForceInline // to ensure Reflection.getCallerClass optimization
@HotSpotIntrinsicCandidate
public Object invoke(Object obj, Object... args)
    throws IllegalAccessException, IllegalArgumentException,
       InvocationTargetException
{
    if (!override) {
        Class<?> caller = Reflection.getCallerClass();
        checkAccess(caller, clazz,
                    Modifier.isStatic(modifiers) ? null : obj.getClass(),
                    modifiers);
    }
    MethodAccessor ma = methodAccessor;             // read volatile
    if (ma == null) {
        ma = acquireMethodAccessor();
    }
    return ma.invoke(obj, args);
}